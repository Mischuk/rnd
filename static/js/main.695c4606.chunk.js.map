{"version":3,"sources":["components/RandomSpinner/RandomSpinner.jsx","components/Spinner/Spinner.jsx","pages/HomePage.js","services/PlaceholderService.js","store/actions/user.js","components/App/App.js","contexts/PlaceholderServiceContext.js","store/reducers/user.js","store/reducers/index.js","store/configureStore.js","index.js"],"names":["RandomSpinner","data","maxPlayers","images","map","el","image","useState","flagLeft","setFlagLeft","flagRight","setFlagRight","setFlagCenter","useEffect","max","length","interval","setInterval","randomLeft","Math","floor","random","randomRight","randomCenter","clearInterval","className","src","alt","Spinner","Component","HomePage","props","isLoading","user","randomed","setRandomed","firstPlayer","setFirstPlayer","secondPlayer","setSecondPlayer","thirdPlayer","setThirdPlayer","randomAnimation","setRandomAnimation","modalPlayer","setModalPlayer","modalOpen","setModalOpen","placerTypes","setMaxPlayers","query","URLSearchParams","useLocation","search","randomInit","min","exclude","exclude2","get","getRandomPlayers","cleared","nations","randomNum1","console","log","randomNum2","randomNum3","setTimeout","openModal","id","item","find","nation","renderNation","player","size","name","unique","info","onClick","index","key","buildings","title","desc","units","type","boost","randomIndex","renderPlace","PlaceholderService","API_URL","fetch","this","res","ok","Error","status","json","body","placeholderService","connect","store","dispatch","getData","then","payload","catch","error","React","createContext","PlaceholderServiceProvider","Provider","Consumer","initialState","rootReducer","combineReducers","state","action","message","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","value","document","getElementById"],"mappings":"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","file":"static/js/main.695c4606.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./RandomSpinner.scss\";\r\n\r\nconst RandomSpinner = ({ data, maxPlayers }) => {\r\n  const images = data.map(el => el.image);\r\n  const [flagLeft, setFlagLeft] = useState(images[0]);\r\n  const [flagRight, setFlagRight] = useState(images[1]);\r\n  const [flagCenter, setFlagCenter] = useState(images[2]);\r\n\r\n  useEffect(() => {\r\n    const min = 0;\r\n    const max = images.length - 1;\r\n\r\n    let interval = setInterval(() => {\r\n      const randomLeft = Math.floor(Math.random() * (max - min + 1)) + min;\r\n      const randomRight = Math.floor(Math.random() * (max - min + 1)) + min;\r\n      const randomCenter = Math.floor(Math.random() * (max - min + 1)) + min;\r\n      setFlagLeft(images[randomLeft]);\r\n      setFlagRight(images[randomRight]);\r\n      setFlagCenter(images[randomCenter]);\r\n    }, 150);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [images]);\r\n\r\n  return (\r\n    <div className=\"random-spinner\">\r\n      <img className=\"random-spinner__image\" src={flagLeft} alt=\"\" />\r\n      <img className=\"random-spinner__image\" src={flagRight} alt=\"\" />\r\n      {maxPlayers > 2 && <img className=\"random-spinner__image\" src={flagLeft} alt=\"\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomSpinner;\r\n","import React, { Component } from \"react\";\r\nimport \"./Spinner.scss\";\r\n\r\nclass Spinner extends Component {\r\n  render() {\r\n    return <div className=\"spinner\"></div>;\r\n  }\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport RandomSpinner from \"../components/RandomSpinner/RandomSpinner\";\r\nimport Spinner from \"../components/Spinner/Spinner\";\r\nimport { BrowserRouter as Router, Link, useLocation } from \"react-router-dom\";\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction HomePage(props) {\r\n  const { isLoading, user: data } = props.data;\r\n  const [randomed, setRandomed] = useState(false);\r\n  const [firstPlayer, setFirstPlayer] = useState();\r\n  const [secondPlayer, setSecondPlayer] = useState();\r\n  const [thirdPlayer, setThirdPlayer] = useState();\r\n  const [randomAnimation, setRandomAnimation] = useState(false);\r\n  const [modalPlayer, setModalPlayer] = useState();\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const intervalTime = 400;\r\n  const placerTypes = [\"Fractal\", \"Pangaea\", \"Continents\", \"Earth\", \"Donut\", \"Oval\", \"Terra\"];\r\n  const [maxPlayers, setMaxPlayers] = useState(2);\r\n  let query = useQuery();\r\n\r\n  const randomInit = (min, max, exclude = null, exclude2 = null) => {\r\n    if (!exclude && !exclude2 && exclude2 !== 0 && exclude !== 0) {\r\n      let randomed = Math.floor(Math.random() * (max - min + 1)) + min;\r\n      return randomed;\r\n    } else {\r\n      let randomed = Math.floor(Math.random() * (max - min + 1)) + min;\r\n      while (exclude === randomed && exclude2 === randomed) {\r\n        randomed = Math.floor(Math.random() * (max - min + 1)) + min;\r\n      }\r\n      return randomed;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const max = query.get(\"max\") || 2;\r\n\r\n    setMaxPlayers(max);\r\n  });\r\n\r\n  const getRandomPlayers = (cleared = true) => {\r\n    const min = 0;\r\n    const max = data.nations.length - 1;\r\n\r\n    if (!cleared) {\r\n      setFirstPlayer();\r\n      setSecondPlayer();\r\n      setThirdPlayer();\r\n      setRandomed(false);\r\n      setRandomAnimation(false);\r\n    }\r\n\r\n    let randomNum1 = randomInit(min, max);\r\n    console.log(`randomNum1: `, randomNum1);\r\n    let randomNum2 = randomInit(min, max, randomNum1);\r\n    console.log(`randomNum2: `, randomNum2);\r\n    let randomNum3 = randomInit(min, max, randomNum1, randomNum2);\r\n    console.log(`randomNum3: `, randomNum3);\r\n\r\n    setFirstPlayer(data.nations[randomNum1]);\r\n    setSecondPlayer(data.nations[randomNum2]);\r\n    setThirdPlayer(data.nations[randomNum3]);\r\n\r\n    setRandomed(true);\r\n    setRandomAnimation(true);\r\n\r\n    setTimeout(() => {\r\n      setRandomAnimation(false);\r\n    }, intervalTime);\r\n  };\r\n\r\n  const openModal = id => {\r\n    const item = data.nations.find(nation => id === nation.id);\r\n    setModalPlayer(item);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const renderPlace = () => {\r\n    let randomIndex = randomInit(0, placerTypes.length - 1);\r\n\r\n    return (\r\n      <div className=\"nation nation--clear\">\r\n        <div className=\"nation__title\">Map: {placerTypes[randomIndex]}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderNation = (player, size = null) => {\r\n    const { name, image, unique, info, id } = player;\r\n    return (\r\n      <div className={`nation ${size ? `nation--${size}` : \"\"}`}>\r\n        <div className=\"nation__title\" onClick={() => openModal(id)}>\r\n          <img className=\"nation__title-image\" src={image} alt=\"\" />\r\n          {name}\r\n        </div>\r\n\r\n        <div className=\"nation__unique\">\r\n          {unique.map((el, index) => (\r\n            <div key={index} className=\"nation__unique-item\">\r\n              {el}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {player.buildings && (\r\n          <div className=\"nation__unique nation__unique--nested\">\r\n            {player.buildings.map((el, index) => (\r\n              <div key={index} className=\"nation__unique-item\">\r\n                <div className=\"nation__title nation__title--small\">\r\n                  <img className=\"nation__title-image\" src={el.image} alt=\"\" />\r\n                  {el.title}\r\n                  <div className=\"nation__sub-title\">{el.desc}</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {player.units && (\r\n          <div className=\"nation__unique nation__unique--nested\">\r\n            {player.units.map((el, index) => (\r\n              <div key={index} className=\"nation__unique-item\">\r\n                <div className=\"nation__title nation__title--small\">\r\n                  <img className=\"nation__title-image\" src={el.image} alt=\"\" />\r\n                  {el.title}\r\n                  <div className=\"nation__sub-title\">{el.desc}</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"nation__unique\">\r\n          <div className=\"nation__unique-item\">\r\n            {info.type.map((el, index) => (\r\n              <span key={index}>{el} </span>\r\n            ))}\r\n          </div>\r\n          <div className=\"nation__unique-item\">{info.boost}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      {isLoading && <Spinner />}\r\n      {!isLoading && !randomed && (\r\n        <div className=\"homepage__random\">\r\n          <button className=\"homepage__random-button\" onClick={getRandomPlayers}>\r\n            Random\r\n          </button>\r\n        </div>\r\n      )}\r\n      {!isLoading && randomed && (\r\n        <div className=\"randomed\">\r\n          <div className=\"randomed__column randomed__column--top\">{!randomAnimation && renderPlace()}</div>\r\n\r\n          <div className=\"randomed__column\">{!randomAnimation && renderNation(firstPlayer, null)}</div>\r\n          <div className=\"randomed__column\">{!randomAnimation && renderNation(secondPlayer, null)}</div>\r\n          {maxPlayers >= 3 && (\r\n            <div className=\"randomed__column\">{!randomAnimation && renderNation(thirdPlayer, null)}</div>\r\n          )}\r\n          <div className=\"randomed__column randomed__column--small\">\r\n            {!randomAnimation && (\r\n              <button className=\"homepage__random-button\" onClick={() => getRandomPlayers(false)}>\r\n                Random\r\n              </button>\r\n            )}\r\n            {randomAnimation && <RandomSpinner maxPlayers={maxPlayers} data={data.nations} />}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {modalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal__close\" onClick={() => setModalOpen(false)}>\r\n            &#10006;\r\n          </div>\r\n          {renderNation(modalPlayer, \"small\")}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","export default class PlaceholderService {\r\n  API_URL = \"./nations.json\";\r\n  async getData() {\r\n    const res = await fetch(`${this.API_URL}`);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch, received ${res.status}`);\r\n    }\r\n\r\n    const body = await res.json();\r\n    return body;\r\n  }\r\n}\r\n","import PlaceholderService from \"../../services/PlaceholderService\";\r\nconst placeholderService = new PlaceholderService();\r\n\r\nexport const GET_USER_REQUEST = \"GET_USER_REQUEST\";\r\nexport const GET_USER_SUCCESS = \"GET_USER_SUCCESS\";\r\nexport const GET_USER_FAIL = \"GET_USER_FAIL\";\r\n\r\nexport function fetchData() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_USER_REQUEST,\r\n    });\r\n\r\n    placeholderService\r\n      .getData()\r\n      .then(data => {\r\n        dispatch({\r\n          type: GET_USER_SUCCESS,\r\n          payload: data,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        dispatch({\r\n          type: GET_USER_FAIL,\r\n          error: true,\r\n          payload: new Error(\"Fetch error\"),\r\n        });\r\n      });\r\n  };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HomePage from \"../../pages/HomePage\";\r\nimport { fetchData } from \"../../store/actions/user\";\r\nimport \"./App.scss\";\r\n\r\nfunction App({ user, getData }) {\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <HomePage data={user} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  const { user } = store;\r\n\r\n  return {\r\n    user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getData: () => dispatch(fetchData()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from \"react\";\r\n\r\nconst {\r\n  Provider: PlaceholderServiceProvider,\r\n  Consumer: PlaceholderServiceConsumer,\r\n} = React.createContext();\r\n\r\nexport { PlaceholderServiceProvider, PlaceholderServiceConsumer };\r\n","import { GET_USER_FAIL, GET_USER_REQUEST, GET_USER_SUCCESS } from \"../actions/user\";\r\n\r\nconst initialState = {\r\n  error: null,\r\n  isLoading: true,\r\n  user: null,\r\n};\r\n\r\nexport function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_USER_REQUEST:\r\n      return { ...state, isLoading: true, error: null };\r\n    case GET_USER_SUCCESS:\r\n      return { ...state, isLoading: false, user: action.payload };\r\n    case GET_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { userReducer } from \"./user\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  user: userReducer,\r\n});\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk, logger)),\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"../node_modules/ress/ress.css\";\r\nimport App from \"./components/App/App\";\r\nimport { PlaceholderServiceProvider } from \"./contexts/PlaceholderServiceContext\";\r\nimport PlaceholderService from \"./services/PlaceholderService\";\r\nimport { store } from \"./store/configureStore\";\r\nconst placeholderService = new PlaceholderService();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PlaceholderServiceProvider value={placeholderService}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </PlaceholderServiceProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}