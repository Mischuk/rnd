{"version":3,"sources":["components/RandomSpinner/RandomSpinner.jsx","components/Spinner/Spinner.jsx","pages/HomePage.js","services/PlaceholderService.js","store/actions/user.js","components/App/App.js","contexts/PlaceholderServiceContext.js","store/reducers/user.js","store/reducers/index.js","store/configureStore.js","index.js"],"names":["RandomSpinner","images","data","map","el","image","useState","flagLeft","setFlagLeft","flagRight","setFlagRight","useEffect","max","length","interval","setInterval","randomLeft","Math","floor","random","randomRight","clearInterval","className","src","alt","Spinner","Component","HomePage","props","isLoading","user","randomed","setRandomed","firstPlayer","setFirstPlayer","secondPlayer","setSecondPlayer","randomAnimation","setRandomAnimation","modalPlayer","setModalPlayer","modalOpen","setModalOpen","placerTypes","randomInit","min","exclude","getRandomPlayers","cleared","nations","randomNum1","randomNum2","setTimeout","openModal","id","item","find","nation","renderNation","player","size","name","unique","info","onClick","index","key","buildings","title","desc","units","type","boost","randomIndex","renderPlace","PlaceholderService","API_URL","fetch","this","res","ok","Error","status","json","body","placeholderService","connect","store","dispatch","getData","then","payload","catch","error","React","createContext","PlaceholderServiceProvider","Provider","Consumer","initialState","rootReducer","combineReducers","state","action","message","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","value","document","getElementById"],"mappings":"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","file":"static/js/main.f40f178c.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./RandomSpinner.scss\";\n\nconst RandomSpinner = ({ data }) => {\n  const images = data.map(el => el.image);\n  const [flagLeft, setFlagLeft] = useState(images[0]);\n  const [flagRight, setFlagRight] = useState(images[1]);\n\n  useEffect(() => {\n    const min = 0;\n    const max = images.length - 1;\n\n    let interval = setInterval(() => {\n      const randomLeft = Math.floor(Math.random() * (max - min + 1)) + min;\n      const randomRight = Math.floor(Math.random() * (max - min + 1)) + min;\n      setFlagLeft(images[randomLeft]);\n      setFlagRight(images[randomRight]);\n    }, 150);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [images]);\n\n  return (\n    <div className=\"random-spinner\">\n      <img className=\"random-spinner__image\" src={flagLeft} alt=\"\" />\n      <img className=\"random-spinner__image\" src={flagRight} alt=\"\" />\n    </div>\n  );\n};\n\nexport default RandomSpinner;\n","import React, { Component } from \"react\";\r\nimport \"./Spinner.scss\";\r\n\r\nclass Spinner extends Component {\r\n  render() {\r\n    return <div className=\"spinner\"></div>;\r\n  }\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\nimport RandomSpinner from \"../components/RandomSpinner/RandomSpinner\";\r\nimport Spinner from \"../components/Spinner/Spinner\";\r\n\r\nfunction HomePage(props) {\r\n  const { isLoading, user: data } = props.data;\r\n  const [randomed, setRandomed] = useState(false);\r\n  const [firstPlayer, setFirstPlayer] = useState();\r\n  const [secondPlayer, setSecondPlayer] = useState();\r\n  const [randomAnimation, setRandomAnimation] = useState(false);\r\n  const [modalPlayer, setModalPlayer] = useState();\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const intervalTime = 400;\r\n  const placerTypes = [\"Fractal\", \"Pangaea\", \"Continents\", \"Earth\", \"Donut\", \"Oval\", \"Terra\"];\r\n\r\n  const randomInit = (min, max, exclude = null) => {\r\n    if (!exclude && exclude !== 0) {\r\n      let randomed = Math.floor(Math.random() * (max - min + 1)) + min;\r\n      return randomed;\r\n    } else {\r\n      let randomed = Math.floor(Math.random() * (max - min + 1)) + min;\r\n      while (exclude === randomed) {\r\n        randomed = Math.floor(Math.random() * (max - min + 1)) + min;\r\n      }\r\n      return randomed;\r\n    }\r\n  };\r\n\r\n  const getRandomPlayers = (cleared = true) => {\r\n    const min = 0;\r\n    const max = data.nations.length - 1;\r\n\r\n    if (!cleared) {\r\n      setFirstPlayer();\r\n      setSecondPlayer();\r\n      setRandomed(false);\r\n      setRandomAnimation(false);\r\n    }\r\n\r\n    let randomNum1 = randomInit(min, max);\r\n    let randomNum2 = randomInit(min, max, randomNum1);\r\n\r\n    setFirstPlayer(data.nations[randomNum1]);\r\n    setSecondPlayer(data.nations[randomNum2]);\r\n\r\n    setRandomed(true);\r\n    setRandomAnimation(true);\r\n\r\n    setTimeout(() => {\r\n      setRandomAnimation(false);\r\n    }, intervalTime);\r\n  };\r\n\r\n  const openModal = id => {\r\n    const item = data.nations.find(nation => id === nation.id);\r\n    setModalPlayer(item);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const renderPlace = () => {\r\n    let randomIndex = randomInit(0, placerTypes.length - 1);\r\n\r\n    return (\r\n      <div className=\"nation nation--clear\">\r\n        <div className=\"nation__title\">Map: {placerTypes[randomIndex]}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderNation = (player, size = null) => {\r\n    const { name, image, unique, info, id } = player;\r\n    return (\r\n      <div className={`nation ${size ? `nation--${size}` : \"\"}`}>\r\n        <div className=\"nation__title\" onClick={() => openModal(id)}>\r\n          <img className=\"nation__title-image\" src={image} alt=\"\" />\r\n          {name}\r\n        </div>\r\n\r\n        <div className=\"nation__unique\">\r\n          {unique.map((el, index) => (\r\n            <div key={index} className=\"nation__unique-item\">\r\n              {el}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {player.buildings && (\r\n          <div className=\"nation__unique nation__unique--nested\">\r\n            {player.buildings.map((el, index) => (\r\n              <div key={index} className=\"nation__unique-item\">\r\n                <div className=\"nation__title nation__title--small\">\r\n                  <img className=\"nation__title-image\" src={el.image} alt=\"\" />\r\n                  {el.title}\r\n                  <div className=\"nation__sub-title\">{el.desc}</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {player.units && (\r\n          <div className=\"nation__unique nation__unique--nested\">\r\n            {player.units.map((el, index) => (\r\n              <div key={index} className=\"nation__unique-item\">\r\n                <div className=\"nation__title nation__title--small\">\r\n                  <img className=\"nation__title-image\" src={el.image} alt=\"\" />\r\n                  {el.title}\r\n                  <div className=\"nation__sub-title\">{el.desc}</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"nation__unique\">\r\n          <div className=\"nation__unique-item\">\r\n            {info.type.map((el, index) => (\r\n              <span key={index}>{el} </span>\r\n            ))}\r\n          </div>\r\n          <div className=\"nation__unique-item\">{info.boost}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      {isLoading && <Spinner />}\r\n      {!isLoading && !randomed && (\r\n        <div className=\"homepage__random\">\r\n          <button className=\"homepage__random-button\" onClick={getRandomPlayers}>\r\n            Random\r\n          </button>\r\n        </div>\r\n      )}\r\n      {!isLoading && randomed && (\r\n        <div className=\"randomed\">\r\n          <div className=\"randomed__column randomed__column--top\">{!randomAnimation && renderPlace()}</div>\r\n          <div className=\"randomed__column\">{!randomAnimation && renderNation(firstPlayer, null)}</div>\r\n          <div className=\"randomed__column randomed__column--small\">\r\n            {!randomAnimation && (\r\n              <button className=\"homepage__random-button\" onClick={() => getRandomPlayers(false)}>\r\n                Random\r\n              </button>\r\n            )}\r\n            {randomAnimation && <RandomSpinner data={data.nations} />}\r\n          </div>\r\n          <div className=\"randomed__column randomed__column--bottom\">\r\n            {!randomAnimation && renderNation(secondPlayer, null)}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {modalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal__close\" onClick={() => setModalOpen(false)}>\r\n            &#10006;\r\n          </div>\r\n          {renderNation(modalPlayer, \"small\")}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","export default class PlaceholderService {\r\n  API_URL = \"./nations.json\";\r\n  async getData() {\r\n    const res = await fetch(`${this.API_URL}`);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch, received ${res.status}`);\r\n    }\r\n\r\n    const body = await res.json();\r\n    return body;\r\n  }\r\n}\r\n","import PlaceholderService from \"../../services/PlaceholderService\";\r\nconst placeholderService = new PlaceholderService();\r\n\r\nexport const GET_USER_REQUEST = \"GET_USER_REQUEST\";\r\nexport const GET_USER_SUCCESS = \"GET_USER_SUCCESS\";\r\nexport const GET_USER_FAIL = \"GET_USER_FAIL\";\r\n\r\nexport function fetchData() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_USER_REQUEST,\r\n    });\r\n\r\n    placeholderService\r\n      .getData()\r\n      .then(data => {\r\n        dispatch({\r\n          type: GET_USER_SUCCESS,\r\n          payload: data,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        dispatch({\r\n          type: GET_USER_FAIL,\r\n          error: true,\r\n          payload: new Error(\"Fetch error\"),\r\n        });\r\n      });\r\n  };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HomePage from \"../../pages/HomePage\";\r\nimport { fetchData } from \"../../store/actions/user\";\r\nimport \"./App.scss\";\r\n\r\nfunction App({ user, getData }) {\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <HomePage data={user} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  const { user } = store;\r\n\r\n  return {\r\n    user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getData: () => dispatch(fetchData()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from \"react\";\r\n\r\nconst {\r\n  Provider: PlaceholderServiceProvider,\r\n  Consumer: PlaceholderServiceConsumer,\r\n} = React.createContext();\r\n\r\nexport { PlaceholderServiceProvider, PlaceholderServiceConsumer };\r\n","import { GET_USER_FAIL, GET_USER_REQUEST, GET_USER_SUCCESS } from \"../actions/user\";\r\n\r\nconst initialState = {\r\n  error: null,\r\n  isLoading: true,\r\n  user: null,\r\n};\r\n\r\nexport function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_USER_REQUEST:\r\n      return { ...state, isLoading: true, error: null };\r\n    case GET_USER_SUCCESS:\r\n      return { ...state, isLoading: false, user: action.payload };\r\n    case GET_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { userReducer } from \"./user\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  user: userReducer,\r\n});\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk, logger)),\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"../node_modules/ress/ress.css\";\r\nimport App from \"./components/App/App\";\r\nimport { PlaceholderServiceProvider } from \"./contexts/PlaceholderServiceContext\";\r\nimport PlaceholderService from \"./services/PlaceholderService\";\r\nimport { store } from \"./store/configureStore\";\r\nconst placeholderService = new PlaceholderService();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PlaceholderServiceProvider value={placeholderService}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </PlaceholderServiceProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}